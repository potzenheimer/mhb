# Minimal deployment buildout
# ===========================
#
# Uses Varnish for proxying, URL rewriting and caching, does not use memcached
# for sessions or RelStorage caching, and does not support SSL.

[buildout]
parts =
    zeoserver
    instance1
    instance2
    instance3
    instance4
    instance-debug
    supervisor
    tmpdir
    repozo
    backup
    chown
    ${buildout:haproxy-parts}
    ${buildout:varnish-parts}
    ${buildout:nginx-parts}


extends =
    packages.cfg
    buildout.d/site.cfg
    buildout.d/csp.cfg
    buildout.d/haproxy.cfg
    buildout.d/varnish.cfg
    buildout.d/nginx.cfg
    sources.cfg
    secret.cfg
    local.cfg


# Create local caches so that we get completely self-contained buildouts.
# These directories must be created before the buildout is run the first time.
eggs-directory = /opt/buildout-cache/eggs
download-cache = /opt/buildout-cache/downloads
extends-cache  = /opt/buildout-cache/extends

find-links =

# Packages to check out/update when buildout is run
auto-checkout =
    ade25.base
    ade25.panelpage
    ade25.sitecontent
    ade25.widgets
    mhb.site
    meetshaus.blog

# Make sure buildout never attempts to update packages automatically for
# production use.
always-checkout = false

# Host names/IP addresses. See below for corresponding ports.
[hosts]
# The public hostname used in virtual hosting, i.e. the public facing domain
## Note: the hosts are configured in local.cfg
# public          = adk-german-courses.com
##
# public1         = augsburger-deutschkurse.de
##
# private         = adk-german-courses.com
# Note: hosts should be set in local.cfg
#public          = adk-german-courses.com
#public1         = augsburger-deutschkurse.de
#private         = adk-german-courses.com
cms             = adk-german-courses.com
# The host that nginx proxies to
nginx-backend   = ${:varnish}
# The hostname/address that Varnish binds to
varnish         = localhost
# The hosts that are allowed to issue PURGE reuqests to Varnish
allow-purge     = localhost
# The IP address that Varnish proxies to (do not use a hostname)
varnish-backend = 127.0.0.1
# The hostname that HAProxy binds to
haproxy         = localhost
# The IP addresses of each Zope instance
instance1       = 127.0.0.1
instance2       = 127.0.0.1
instance3       = 127.0.0.1
instance4       = 127.0.0.1
instance-debug  = 127.0.0.1
# Where to find the syslog deamon to log to
syslog          = localhost
# The hostname that memcached binds to
memcached       = localhost
# The hostname where the database server is found
database        = localhost
# The hostname that supervisord binds to
supervisor      = localhost

# Port corresponding to the hostnames above. Note that to bind to ports
# < 1024, you will need to run ./bin/supervisord as root!
[ports]
http            = 80
https           = 443
nginx-backend   = ${:varnish}
varnish         = 8100
varnish-backend = ${:haproxy}
haproxy         = 8200
haproxy-stats   = 8222
instance1       = 8401
instance2       = 8402
instance3       = 8403
instance4       = 8404
zeoserver       = 8300
instance-debug  = 8499
syslog          = 514
memcached       = 11211
database        = 3306
supervisor      = 9001


[users]
# Process owners for nginx, varnish, haproxy, memcached and Zope
# On Debian execute: adduser www
nginx            = www
varnish          = www
haproxy          = www
zope-process     = www
memcached        = www

zope-process     = www
zope-process-production = www
zope-process-production-group = www
zope-admin       = zope-admin
supervisor-admin = supervisor-admin

# Passwords for the accounts above
[passwords]
zope-admin       = secret-token
supervisor-admin = secret-token

# Database instances for SQLAlchemy and RelStorage
[databases]
zodb    = zodb

[limits]
# How many open files are allowed? This affects the number of concurrent
# connections. On some operating systems, this is set on startup per user
open-files = 100
# Timeout of inactivity for Beaker sessions
session-timeout = 600

[sites]
# Plone site ids - used in virtual hosting
main = adk

[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = ${ports:zeoserver}
effective-user = ${users:zope-process-production}
zeo-var = ${buildout:directory}/var
blob-storage = ${zeoserver:zeo-var}/blobstorage

# Zope instance template
[instance]
recipe = plone.recipe.zope2instance
user = ${users:zope-admin}:${passwords:zope-admin}
debug-mode = off
wsgi = on
verbose-security = off
effective-user = ${users:zope-process}
http-address = ${ports:instance}
http-fast-listen = on
zserver-threads = 2
zodb-cache-size = 10000
zeo-client = true
zeo-address = ${ports:zeoserver}
shared-blob = on
resources = ${buildout:directory}/resources
eggs =
    ${eggs:main}
    ${eggs:custom}
    ${eggs:addon}
environment-vars =
    PTS_LANGUAGES en de
    zope_i18n_allowed_languages en de
    zope_i18n_compile_mo_files true
    TUS_ENABLED true
    TUS_TMP_FILE_DIR ${buildout:directory}/var/tmp
zope-conf-additional =
    <product-config beaker>
    session.type            file
    session.data_dir        ${buildout:directory}/var/sessions/data
    session.lock_dir        ${buildout:directory}/var/sessions/lock
    session.key             beaker.session.mhb
    session.secret          pah7xeethooMaef2Eisahphie0Ahwaexoo0choh9foongoTu-mhb
    </product-config>


[instance1]
<= instance
http-address = ${hosts:instance1}:${ports:instance1}

[instance2]
<= instance
http-address = ${hosts:instance2}:${ports:instance2}

[instance3]
<= instance
http-address = ${hosts:instance3}:${ports:instance3}

[instance4]
<= instance
http-address = ${hosts:instance4}:${ports:instance4}

[instance-debug]
<= instance
http-address = ${hosts:instance-debug}:${ports:instance-debug}

[tmpdir]
recipe = z3c.recipe.mkdir
paths = ${buildout:directory}/var/tmp

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo


# Install supervisor, which runs on port 9001
# Run: ``bin/supervisord``
# Run: ``bin/supervisorctl --help``
[supervisor]
recipe = collective.recipe.supervisor
port = ${ports:supervisor}
user = ${users:supervisor-admin}
password = ${passwords:supervisor-admin}
serverurl = http://${hosts:supervisor}:${ports:supervisor}
programs =
    10 nginx      ${nginx-build:location}/sbin/nginx true
    20 varnish    ${varnish-build:location}/sbin/varnishd [-F -s ${varnish-options:storage} -f ${buildout:directory}/etc/varnish.vcl -a ${hosts:varnish}:${ports:varnish} ${varnish-options:tuning}] true ${users:varnish}
    30 haproxy    /usr/local/sbin/haproxy       [-f ${buildout:directory}/etc/haproxy.conf] true ${users:haproxy}
    40 zeoserver  ${zeoserver:location}/bin/runzeo
    50 instance1  ${buildout:directory}/bin/instance1 [console] true ${users:zope-process-production}
    50 instance2  ${buildout:directory}/bin/instance2 [console] true ${users:zope-process-production}
    50 instance3  ${buildout:directory}/bin/instance3 [console] true ${users:zope-process-production}
    50 instance4  ${buildout:directory}/bin/instance4 [console] true ${users:zope-process-production}

[backup]
recipe = collective.recipe.backup
backup_blobs = true
blob_storage = ${buildout:directory}/var/blobstorage
location = /opt/backups/${sites:main}/backups
ziplocation = /opt/backups/${sites:main}/zipbackups
blobbackuplocation = /opt/backups/${sites:main}/backups/blob
blobziplocation = /opt/backups/${sites:main}/backups/blobzip
snapshotbackup = /opt/backups/${sites:main}/snapshotbackups
keep = 2
full = false
debug = false
enable_zipbackup = true

[chown]
recipe = plone.recipe.command
command =
    chown -R ${users:zope-process-production}:${users:zope-process-production-group} ${buildout:directory}/bin
    chown -R ${users:zope-process-production}:${users:zope-process-production-group} ${buildout:directory}/src
    chown -R ${users:zope-process-production}:${users:zope-process-production-group} ${buildout:directory}/parts
    chown -R ${users:zope-process-production}:${users:zope-process-production-group} ${buildout:directory}/var
update-command =
    ${chown:command}
